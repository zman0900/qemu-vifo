#                 r9 280x = 1002:6798 - 02:00.0
#           r9 280x audio = 1002:aaa0 - 02:00.1
# onboard usb2 (not used) = 8086:1e26 - 00:1d.0
# onboard usb3 (not used) = 1b6f:7023 - 06:00.0
#               pcie usb3 = 1033:0194 - 0a:00.0
#                    sata = 1b21:0612 - 04:00.0


MACHINE="-enable-kvm -M q35 -bios /usr/share/qemu/bios.bin -rtc base=localtime"
CPU="-cpu host -smp 8,sockets=1,cores=4,threads=2"
MEM="-m 8192"
GRAPHICS="-vga none"

BASIC_CFG="$MACHINE $CPU $MEM $GRAPHICS"


SPICE="-spice port=5930,addr=127.0.0.1,disable-ticketing \
-device virtio-serial-pci \
-device virtserialport,chardev=spicechannel0,name=com.redhat.spice.0 \
-chardev spicevmc,id=spicechannel0,name=vdagent"
BALLOON="-balloon virtio"
MONITOR="-monitor telnet:127.0.0.1:3010,server,nowait,ipv4"
NIC="-net nic,model=virtio,macaddr=52:54:DE:AD:BE:EF -net bridge,br=br0"

VIRT_DEVS="$SPICE $BALLOON $MONITOR $NIC"


PASS_GPU="-device ioh3420,bus=pcie.0,addr=1c.0,multifunction=on,port=1,chassis=1,id=root.1 \
-device vfio-pci,host=02:00.0,bus=root.1,addr=00.0,multifunction=on,x-vga=on \
-device vfio-pci,host=02:00.1,bus=root.1,addr=00.1"
PASS_USB="-device ioh3420,bus=pcie.0,addr=1d.0,port=2,chassis=2,id=root.2 \
-device vfio-pci,host=0a:00.0,bus=root.2" 
#-device vfio-pci,host=00:1d.0,bus=root.2"
PASS_SATA="-device ioh3420,bus=pcie.0,addr=1e.0,port=3,chassis=3,id=root.3 \
-device vfio-pci,host=04:00.0,bus=root.3"

PASSTHROUGH="$PASS_GPU $PASS_USB $PASS_SATA"


HDD_BUS="-device virtio-scsi-pci,id=scsi"
HDD1="-drive file=/dev/mapper/vg0-kvm_win8,id=disk1,if=none,format=raw \
-device scsi-hd,bus=scsi.0,drive=disk1"
HDD2="-drive file=/dev/mapper/vg0-steam,id=disk2,if=none,format=raw \
-device scsi-hd,bus=scsi.0,drive=disk2"
CD1="-drive file=/mnt/data/iso/en_windows_8_x64_dvd_915440.iso,if=none,id=cd1 \
-device scsi-cd,bus=scsi.0,drive=cd1"
IDE_CD="-drive file=/mnt/data/iso/virtio-win-0.1-100.iso,if=none,id=cd2 \
-device ide-cd,drive=cd2"

STORAGE="$HDD_BUS $HDD2 $CD1 $IDE_CD"


# Systemd too stupid to expand variables, so...
# Source file in shell, then put result of this in args=""
ARGS="$BASIC_CFG $VIRT_DEVS $PASSTHROUGH $STORAGE"
# And the result of this in haltcmd=""
#HALTCMD="echo 'system_powerdown' | nc 127.0.0.1 3010"
HALTCMD="net rpc -S kvm-win8 shutdown -t 0 -f -U shutdown%{{WIN_SHUTDOWN_PASS}}"

